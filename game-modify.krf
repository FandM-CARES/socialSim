(in-microtheory ModifyGamesMt)

;;; remove ?agent from StagHuntX game
(preconditionForMethod
 (and
    (genlMt ?game StagHuntMt)
    (isa ?agent Agent-Generic)
      )
 (methodForAction
  (removeAgentFromGame ?agent ?game)
  (actionSequence
   (TheList
        (doAgentPlan (makeModifiedStep ?agent (Step1MtFn ?game)))
        (doAgentPlan (makeModifiedStep ?agent (Step2MtFn ?game)))
        (doAgentPlan (makeModifiedStep ?agent (Step3MtFn ?game)))
        (doAgentPlan (makeModifiedStep ?agent (CoopMtFn ?game)))
    ))))


(preconditionForMethod
 (and
    (TheClosedRetrievalSetOf ?expression
      (and
        (ist-Information ?step ?expression)
        (uninferredSentence (containsPattern ?expression ?agent))))
    (unifies ?mt (AgentRemovedStepFn ?agent ?case))
      )
 (methodForAction
  (makeModifiedStep ?agent ?step)
  (actionSequence
   (TheList
        (doRecord ?mt ?expression)
    ))))



;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(isa removeAgentFromGame ComplexActionPredicate)
(arity removeAgentFromGame 2)
(arg1Isa removeAgentFromGame Agent-Generic)
(arg2Isa removeAgentFromGame Microtheory)

(isa removeAgentFromStep ComplexActionPredicate)
(arity removeAgentFromStep 2)
(arg1Isa removeAgentFromStep Agent-Generic)
(arg2Isa removeAgentFromGame Microtheory)

(isa AgentRemovedStepFn Function-Denotational)
(arity AgentRemovedStepFn 2)
(arg1Isa AgentRemovedStepFn Agent-Generic)
(arg2Isa AgentRemovedStepFn Microtheory)
(resultIsa AgentRemovedStepFn Microtheory)