(in-microtheory ModifyGamesMt)
(genlMt Session-ReasonerPlanMt ModifyGamesMt)
(genlMt StagHuntMt ModifyGamesMt)


;;; (removeAgentFromGame (TheSet agentA agentB agentC) (TheSet StagHuntA-DoubleCoop))
;;; (ist-Information (AgentRemovedStepFn agentA (Step1MtFn StagHuntA-DoubleCoop)) ?expression)

;;; for each game in ?games, for each agent in ?agents, remove agent from game
(preconditionForMethod
 (and
    (evaluate ?agent-game-pairs
      (TheClosedRetrievalSetOf ?pair
        (and
            (elementOf ?agent ?agents)
            (elementOf ?game ?games)
            (unifies ?pair (TheList ?agent ?game)))))
      )
 (methodForAction
  (removeAgentFromGame ?agents ?games)
  (actionSequence
   (TheList
     (doForEach (TheList ?agent ?game) ?agent-game-pairs
        (actionSequence
         (TheList
            (doAgentPlan (makeModifiedStep ?agent (Step1MtFn ?game)))
            (doAgentPlan (makeModifiedStep ?agent (Step2MtFn ?game)))
            (doAgentPlan (makeModifiedStep ?agent (Step3MtFn ?game)))
            (doAgentPlan (makeModifiedStep ?agent (CoopMtFn ?game)))
    )))
))))


(preconditionForMethod
 (and
    (evaluate ?expressions
     (TheClosedRetrievalSetOf ?expression
      (and
        (ist-Information ?step ?expression)
        (uninferredSentence (containsPattern ?agent ?expression)))))
    (unifies ?mt (AgentRemovedStepFn ?agent ?step))
      )
 (methodForAction
  (makeModifiedStep ?agent ?step)
  (actionSequence
   (TheList
        (doRecordMembersInContext ?mt ?expressions)
    ))))



;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(isa removeAgentFromGame ComplexActionPredicate)
(arity removeAgentFromGame 2)

(isa makeModifiedStep ComplexActionPredicate)
(arity makeModifiedStep 2)

(isa AgentRemovedStepFn Function-Denotational)
(arity AgentRemovedStepFn 2)